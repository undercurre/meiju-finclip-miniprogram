import{isDef,isNumber,isPlainObject,isPromise}from"./validator";import{canIUseGroupSetData,canIUseNextTick}from"./version";export{isDef}from"./validator";export function range(num,min,max){return Math.min(Math.max(num,min),max)}export function nextTick(cb){canIUseNextTick()?wx.nextTick(cb):setTimeout(()=>{cb()},1e3/30)}let systemInfo;export function getSystemInfoSync(){return systemInfo==null&&(systemInfo=wx.getSystemInfoSync()),systemInfo}export function addUnit(value){if(!!isDef(value))return value=String(value),isNumber(value)?`${value}px`:value}export function requestAnimationFrame(cb){return getSystemInfoSync().platform==="devtools"?setTimeout(()=>{cb()},1e3/30):wx.createSelectorQuery().selectViewport().boundingClientRect().exec(()=>{cb()})}export function pickExclude(obj,keys){return isPlainObject(obj)?Object.keys(obj).reduce((prev,key)=>(keys.includes(key)||(prev[key]=obj[key]),prev),{}):{}}export function getRect(context,selector){return new Promise(resolve=>{wx.createSelectorQuery().in(context).select(selector).boundingClientRect().exec((rect=[])=>resolve(rect[0]))})}export function getAllRect(context,selector){return new Promise(resolve=>{wx.createSelectorQuery().in(context).selectAll(selector).boundingClientRect().exec((rect=[])=>resolve(rect[0]))})}export function groupSetData(context,cb){canIUseGroupSetData()?context.groupSetData(cb):cb()}export function toPromise(promiseLike){return isPromise(promiseLike)?promiseLike:Promise.resolve(promiseLike)}export function getCurrentPage(){const pages=getCurrentPages();return pages[pages.length-1]}
